// 구조체

/*
  스위프트 대부분의 타입 구조체
  구조체는 값(value) 타입
  대문자 카멜케이스 사용해 정의
*/

// 프로퍼티 및 메서드
// 프로퍼티 : 구조체 안 인스턴스 변수
// 메서드 : 구조체 안 함수
struct Sample {
  var mutableProperty: Int = 100 // 가변 인스턴스 프로퍼티
  let immutableProperty: Int = 100 // 불변 인스턴스 프로퍼티

  static var typeProperty: Int = 100 // 구조체에서 사용 가능한 타입 프로퍼티 

  // 인스턴스 메서드
  func instanceMethod() {
    print("instance method")
  }

  // 타입 메서드
  static func typeMethod() {
    print("type method")
  }
}


// 구조체 사용
// 가변 인스턴스
var mutable: Sample = Sample()

mutable.mutableProperty = 200
// method.immutableProperty = 100 : 불변 프로퍼티라서 오류 발생

// 불변 인스턴스
let immutable: Sample = Sample() 
//immutable.mutableProperty = 200 :  값 변경 안됨



// 타입 프로퍼티 및 메서드
Sample.typeProperty = 300
Sample.typeMethod()

// mutable.typeProperty = 400 인스턴스에서 타입 프로퍼티 사용 불능
// mutable.typeMethod() 인스턴스에서 타입 메서드 사용 불능



// 학생 구조체는
struct Student {
  var name: String = "unknown"
  var `class`: String = "Swift"
  // `키워드` : 이름으로 사용 가능
  // ` : option + ~

  static func selfIntroduce() {
    print("학생 타입입니다.")
  }

  func selfIntroduce() {
    print("저는 \(self.class)반 \(name)입니다")
  }
}

Student.selfIntroduce() // 타입 메서드 호출

var yagom: Student = Student()
yagom.name = "yagom"
yagom.class = "스위프트"
yagom.selfIntroduce() // 인스턴스 메서드 호출


let jina: Student = Student()

// 불변 인스턴스이므로 프로퍼티 값 변경 불가
// jina.name = "jina" : 컴파일 오류 발생
jina.selfIntroduce()
